<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="ButtonBackgroundColor">#3A4864</Color>
    <Color x:Key="ButtonMouseOverColor">#E59400</Color>
    <Color x:Key="ButtonPressedColor">#E56C00</Color>
    <Color x:Key="ButtonDisabledColor">#97a6a0</Color>
    <Color x:Key="GroupBoxBorderColor">#606E7B</Color>

    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource ButtonBackgroundColor}" />
    <SolidColorBrush x:Key="ButtonMouseOverBrush" Color="{StaticResource ButtonMouseOverColor}" />
    <SolidColorBrush x:Key="ButtonPressedBrush" Color="{StaticResource ButtonPressedColor}" />
    <SolidColorBrush x:Key="ButtonDisabledBrush" Color="{StaticResource ButtonDisabledColor}"/>
    <SolidColorBrush x:Key="GroupBoxBorderBrush" Color="{StaticResource GroupBoxBorderColor}" />

    <!-- Sets the DefaultFont used throughout the application -->
    <FontFamily x:Key="DefaultFont" >Segoe UI</FontFamily>

    <!-- Default FontStyle for all controls which are defined in this ResourceDictionary -->
    <Style x:Key="FontStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <!-- Default Style for TextBlock -->
    <!-- Note: Since TextBlock is not a control it cannot be based upon FontStyle -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="LabelText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ValueText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="SmallText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="LargeText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="26"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="InfoText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonMouseOverBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonPressedBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ButtonDisabledBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionButton" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="85"/>
    </Style>

    <Style x:Key="TextOnlyButton" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="40"/>
    </Style>

    <Style x:Key="ToggleButtonLikeRadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="RadioButton"/>

    <Style x:Key="HyperLink" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="Blue"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline" 
                    Text="{TemplateBinding Content}"
                    Background="{TemplateBinding Background}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="0,0,0,15"/>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border 
                            Grid.Row="0"
                            BorderThickness="1"
                            BorderBrush="{StaticResource GroupBoxBorderBrush}"
                            Background="{StaticResource GroupBoxBorderBrush}">
                            <Label Foreground="White">
                                <ContentPresenter Margin="4"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True" />
                            </Label>
                        </Border>

                        <Border Grid.Row="1"
                            BorderThickness="1,0,1,1"
                            BorderBrush="{StaticResource GroupBoxBorderBrush}">
                            <ContentPresenter Margin="4"  >
                            </ContentPresenter>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>